{"version":3,"sources":["MorseCode.js","App.js","index.js"],"names":["morseCode","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","App","props","state","input","output","morseArray","split","i","length","toUpperCase","this","setState","className","size","onChange","e","translateToMorse","target","value","placeholder","rows","cols","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAuCeA,EAvCU,CACvBC,EAAG,KACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,IACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,MACHC,EAAG,MACHC,EAAG,IACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,OACHC,EAAG,OACH,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,QACL,EAAK,SCcQC,E,kDA9Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAJO,E,6DAQFD,GAGf,IAFA,IAAIC,EAAS,GACTC,EAAaF,EAAMG,MAAM,IACpBC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACF,KAA/BF,EAAWE,GAAGE,cAChBL,GAAU,WAEVA,GAAU/B,EAAUgC,EAAWE,GAAGE,eAGtCC,KAAKC,SAAS,CAAEP,a,+BAGR,IAAD,OACP,OACE,yBAAKQ,UAAU,OACb,qDACA,6BACA,gDACA,2BACEA,UAAU,OACVC,KAAK,KACLC,SAAU,SAACC,GAAD,OAAO,EAAKC,iBAAiBD,EAAEE,OAAOC,QAChDC,YAAY,cAEd,6BACA,6CACA,8BACEP,UAAU,QACVQ,KAAK,IACLC,KAAK,KACLH,MAAOR,KAAKR,MAAME,c,GAxCVkB,a,MCElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4667ad60.chunk.js","sourcesContent":["export const morseCode = {\n  A: \".-\",\n  B: \"-...\",\n  C: \"-.-.\",\n  D: \"-..\",\n  E: \".\",\n  F: \"..-.\",\n  G: \"--.\",\n  H: \"....\",\n  I: \"..\",\n  J: \".---\",\n  K: \"-.-\",\n  L: \".-..\",\n  M: \"--\",\n  N: \"-.\",\n  O: \"---\",\n  P: \".--.\",\n  Q: \"--.-\",\n  R: \".-.\",\n  S: \"...\",\n  T: \"-\",\n  U: \"..-\",\n  V: \"...-\",\n  W: \".--\",\n  X: \"-..-\",\n  Y: \"-.--\",\n  Z: \"--..\",\n  \"0\": \"-----\",\n  \"1\": \".----\",\n  \"2\": \"..---\",\n  \"3\": \"...--\",\n  \"4\": \"....-\",\n  \"5\": \".....\",\n  \"6\": \"-....\",\n  \"7\": \"--...\",\n  \"8\": \"---..\",\n  \"9\": \"----.\",\n};\n\nexport default morseCode;\n","import React, { Component } from \"react\";\nimport morseCode from \"./MorseCode\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      output: \"\",\n    };\n  }\n\n  translateToMorse(input) {\n    let output = \"\";\n    let morseArray = input.split(\"\");\n    for (let i = 0; i < morseArray.length; i++) {\n      if (morseArray[i].toUpperCase() == \" \") {\n        output += \"\\xa0\\xa0\";\n      } else {\n        output += morseCode[morseArray[i].toUpperCase()];\n      }\n    }\n    this.setState({ output });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Morse Code Translator</h1>\n        <br />\n        <span>Original Text:</span>\n        <input\n          className=\"form\"\n          size=\"40\"\n          onChange={(e) => this.translateToMorse(e.target.value)}\n          placeholder=\"type here\"\n        />\n        <br />\n        <span>Morse Code:</span>\n        <textarea\n          className=\"form2\"\n          rows=\"5\"\n          cols=\"40\"\n          value={this.state.output}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./scss/main.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}